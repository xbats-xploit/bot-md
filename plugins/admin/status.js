export default {
    command: 'status',
    description: 'Check group features status',
    category: 'admin',
    usage: '',
    example: '.status',
    aliases: ['groupinfo'],
    groupOnly: true,
    adminOnly: true,
    
    async execute(context) {
        const { msg, db, reply } = context
        
        const groupId = msg.key.remoteJid
        const groupData = db.getGroup(groupId)
        
        const statusEmoji = (status) => status ? '‚úÖ' : '‚ùå'
        
        const statusText = `
üç• *…¢ Ä·¥è·¥ú·¥ò “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás s·¥õ·¥Ä·¥õ·¥ús*

${statusEmoji(groupData.welcome)} ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á (·¥Ö·¥á“ì·¥Ä·¥ú ü·¥õ: ·¥è…¥)
${statusEmoji(groupData.bye)}  ü·¥á·¥Ä·¥†·¥á (·¥Ö·¥á“ì·¥Ä·¥ú ü·¥õ: ·¥è…¥)
${statusEmoji(groupData.antilink)} ·¥Ä…¥·¥õ…™ ü…™…¥·¥ã (·¥Ö·¥á“ì·¥Ä·¥ú ü·¥õ: ·¥è“ì“ì)
${statusEmoji(groupData.antisticker)} ·¥Ä…¥·¥õ…™s·¥õ…™·¥Ñ·¥ã·¥á Ä (·¥Ö·¥á“ì·¥Ä·¥ú ü·¥õ: ·¥è“ì“ì)
${statusEmoji(groupData.antidelete)} ·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á (·¥Ö·¥á“ì·¥Ä·¥ú ü·¥õ: ·¥è“ì“ì)
${statusEmoji(groupData.antibadword)} ·¥Ä…¥·¥õ…™ ô·¥Ä·¥Ö·¥°·¥è Ä·¥Ö (·¥Ö·¥á“ì·¥Ä·¥ú ü·¥õ: ·¥è“ì“ì)
${statusEmoji(groupData.antispam)} ·¥Ä…¥·¥õ…™s·¥ò·¥Ä·¥ç (·¥Ö·¥á“ì·¥Ä·¥ú ü·¥õ: ·¥è“ì“ì)
${statusEmoji(groupData.mute)} ·¥ç·¥ú·¥õ·¥á (·¥Ö·¥á“ì·¥Ä·¥ú ü·¥õ: ·¥è“ì“ì)

üç• *·¥õ…™·¥òs:*
‚Ä¢ …¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥ \`.enable <feature>\` ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á…¥…¢·¥Ä·¥ã·¥õ…™“ì·¥ã·¥Ä…¥
‚Ä¢ …¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥ \`.disable <feature>\` ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á…¥·¥è…¥·¥Ä·¥ã·¥õ…™“ì·¥ã·¥Ä…¥
        `.trim()
        
        await reply(statusText)
    }
}
