export default {
    command: 'disable',
    description: 'Disable features in group',
    category: 'admin',
    usage: '<feature>',
    example: '.disable antisticker',
    aliases: ['off'],
    groupOnly: true,
    adminOnly: true,
    
    async execute(context) {
        const { msg, args, db, reply, sock } = context
        
        if (!args.length) {
            return await reply('‚ùå …¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥: .disable <feature>\n\nüçì ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás:\n‚Ä¢ welcome\n‚Ä¢ leave\n‚Ä¢ antisticker\n‚Ä¢ antilink\n‚Ä¢ antidelete\n‚Ä¢ antibadword')
        }
        
        const feature = args[0].toLowerCase()
        const groupId = msg.key.remoteJid
        const groupData = db.getGroup(groupId)
        
        switch (feature) {
            case 'welcome':
                if (!groupData.welcome) {
                    return await reply('‚ùå ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                }
                groupData.welcome = false
                db.saveGroups()
                await reply('‚ùå ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á  ú·¥Äs  ô·¥á·¥á…¥ ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                break
                
            case 'leave':
            case 'bye':
                if (!groupData.bye) {
                    return await reply('‚ùå  ü·¥á·¥Ä·¥†·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                }
                groupData.bye = false
                db.saveGroups()
                await reply('‚ùå  ü·¥á·¥Ä·¥†·¥á  ú·¥Äs  ô·¥á·¥á…¥ ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                break
                
            case 'antisticker':
                if (!groupData.antisticker) {
                    return await reply('‚ùå ·¥Ä…¥·¥õ…™s·¥õ…™·¥Ñ·¥ã·¥á Ä …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                }
                groupData.antisticker = false
                db.saveGroups()
                await reply('‚ùå ·¥Ä…¥·¥õ…™s·¥õ…™·¥Ñ·¥ã·¥á Ä  ú·¥Äs  ô·¥á·¥á…¥ ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                break
                
            case 'antilink':
                if (!groupData.antilink) {
                    return await reply('‚ùå ·¥Ä…¥·¥õ…™ ü…™…¥·¥ã …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                }
                groupData.antilink = false
                db.saveGroups()
                await reply('‚ùå ·¥Ä…¥·¥õ…™ ü…™…¥·¥ã  ú·¥Äs  ô·¥á·¥á…¥ ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                break
                
            case 'antidelete':
                if (!groupData.antidelete) {
                    return await reply('‚ùå ·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                }
                groupData.antidelete = false
                db.saveGroups()
                await reply('‚ùå ·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á  ú·¥Äs  ô·¥á·¥á…¥ ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                break
                
            case 'antibadword':
                if (!groupData.antibadword) {
                    return await reply('‚ùå ·¥Ä…¥·¥õ…™ ô·¥Ä·¥Ö·¥°·¥è Ä·¥Ö …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                }
                groupData.antibadword = false
                db.saveGroups()
                await reply('‚ùå ·¥Ä…¥·¥õ…™ ô·¥Ä·¥Ö·¥°·¥è Ä·¥Ö  ú·¥Äs  ô·¥á·¥á…¥ ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö')
                break
                
            default:
                await reply('‚ùå “ì·¥á·¥Ä·¥õ·¥ú Ä·¥á …¥·¥è·¥õ “ì·¥è·¥ú…¥·¥Ö\n\nüç• ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás:\n‚Ä¢ welcome\n‚Ä¢ leave\n‚Ä¢ antisticker\n‚Ä¢ antilink\n‚Ä¢ antidelete\n‚Ä¢ antibadword')
                break
        }
    }
}
