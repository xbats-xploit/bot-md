export default {
    command: 'delbadword',
    description: 'Remove custom badword from global or group list',
    category: 'owner',
    usage: '<word> [--global]',
    example: '.delbadword kontol --global',
    aliases: ['delword', 'removebadword'],
    ownerOnly: true,
    
    async execute(context) {
        const { msg, args, db, reply, isGroup } = context
        
        if (!args.length) {
            return await reply(`‚ùå ·¥ç·¥Äs·¥ú·¥ã·¥ã·¥Ä…¥ ·¥ã·¥Ä·¥õ·¥Ä  è·¥Ä…¥…¢ …™…¥…¢…™…¥ ·¥Ö…™ ú·¥Ä·¥ò·¥ús

üìù *·¥Ñ·¥è…¥·¥õ·¥è ú:*
\`.delbadword kontol\` -  ú·¥Ä·¥ò·¥ús ·¥Ö·¥Ä Ä…™ …¢ Ä·¥ú·¥ò …™…¥…™
\`.delbadword kontol --global\` -  ú·¥Ä·¥ò·¥ús ·¥Ö·¥Ä Ä…™ ·¥Ö·¥ÄÍú∞·¥õ·¥Ä Ä …¢ ü·¥è ô·¥Ä ü

üí° *·¥õ…™·¥ò:* …¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥ \`.listbadword\` ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á ü…™ ú·¥Ä·¥õ ·¥Ö·¥ÄÍú∞·¥õ·¥Ä Ä`)
        }
        
        const isGlobal = args.includes('--global')
        const word = args.filter(arg => arg !== '--global').join(' ').toLowerCase().trim()
        
        if (!word) {
            return await reply('‚ùå ·¥ã·¥Ä·¥õ·¥Ä ·¥õ…™·¥Ö·¥Ä·¥ã  ô·¥è ü·¥á ú ·¥ã·¥ès·¥è…¥…¢')
        }
        
        try {
            if (isGlobal) {
                // Remove from global badwords
                const success = db.removeGlobalBadword(word)
                if (success) {
                    const globalBadwords = db.getGlobalBadwords()
                    await reply(`‚úÖ ·¥ã·¥Ä·¥õ·¥Ä "${word}" ·¥Ö…™ ú·¥Ä·¥ò·¥ús ·¥Ö·¥Ä Ä…™ ·¥Ö·¥ÄÍú∞·¥õ·¥Ä Ä …¢ ü·¥è ô·¥Ä ü

üìä *·¥õ·¥è·¥õ·¥Ä ü  ô·¥Ä·¥Ö·¥°·¥è Ä·¥Ö …¢ ü·¥è ô·¥Ä ü:* ${globalBadwords.length}`)
                } else {
                    await reply(`‚ùå ·¥ã·¥Ä·¥õ·¥Ä "${word}" ·¥õ…™·¥Ö·¥Ä·¥ã ·¥Ö…™·¥õ·¥á·¥ç·¥ú·¥ã·¥Ä…¥ ·¥Ö…™ ·¥Ö·¥ÄÍú∞·¥õ·¥Ä Ä …¢ ü·¥è ô·¥Ä ü`)
                }
            } else {
                if (!isGroup) {
                    return await reply('‚ùå ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú …™…¥…™  ú·¥Ä…¥ è·¥Ä  ô…™s·¥Ä ·¥Ö…™…¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥ ·¥Ö…™ …¢ Ä·¥ú·¥ò')
                }
                
                const groupId = msg.key.remoteJid
                const success = db.removeGroupBadword(groupId, word)
                
                if (success) {
                    const groupBadwords = db.getGroupBadwords(groupId)
                    await reply(`‚úÖ ·¥ã·¥Ä·¥õ·¥Ä "${word}" ·¥Ö…™ ú·¥Ä·¥ò·¥ús ·¥Ö·¥Ä Ä…™ ·¥Ö·¥ÄÍú∞·¥õ·¥Ä Ä  ô·¥Ä·¥Ö·¥°·¥è Ä·¥Ö …¢ Ä·¥ú·¥ò

üìã *·¥õ·¥è·¥õ·¥Ä ü  ô·¥Ä·¥Ö·¥°·¥è Ä·¥Ö …¢ Ä·¥ú·¥ò:* ${groupBadwords.length}`)
                } else {
                    await reply(`‚ùå ·¥ã·¥Ä·¥õ·¥Ä "${word}" ·¥õ…™·¥Ö·¥Ä·¥ã ·¥Ö…™·¥õ·¥á·¥ç·¥ú·¥ã·¥Ä…¥ ·¥Ö…™ ·¥Ö·¥ÄÍú∞·¥õ·¥Ä Ä …¢ Ä·¥ú·¥ò`)
                }
            }
        } catch (error) {
            console.error('Error removing badword:', error)
            await reply('‚ùå ·¥õ·¥á Ä·¥ä·¥Ä·¥Ö…™ ·¥ã·¥áÍú±·¥Ä ü·¥Ä ú·¥Ä…¥ Íú±·¥Ä·¥Ä·¥õ ·¥ç·¥á…¥…¢ ú·¥Ä·¥ò·¥ús  ô·¥Ä·¥Ö·¥°·¥è Ä·¥Ö')
        }
    }
}
